/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package trabalhopratico1;

import java.awt.Color;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Bruno Batista
 */
public class TelaPrincipal extends javax.swing.JFrame {

    private Conf config;
    private int tipoMap, tipoSubst;
    private String pathConfig, pathTeste;
    /**
     * Creates new form TelaPrincipal
     */
    public TelaPrincipal() {
        pathConfig = "./dados/config.txt";
        pathTeste = "./dados/teste_1.txt";
        config = new Conf(pathConfig);
        
        initComponents();
        
        grpAcesso.add(radDireto);
        grpAcesso.add(radAssoc);
        grpAcesso.add(radAssocConj);
        
        grpSubst.add(radRandom);
        grpSubst.add(radFIFO);
        grpSubst.add(radLRU);
        grpSubst.add(radLFU);
                
        inpConfig.setText(pathConfig);
        inpTeste.setText(pathTeste);
        
        String t = 
            "Memória Principal:  "+config.getMem()+" B\n"+
            "Memória Cache: "+config.getCache()+" B\n"+
            "Palavras por linha: "+config.getLinha()+
            "\nTamanho da palavra: "+config.getPalavra()+" B\n"+
            "Número de blocos na MP: "+config.getnBlocos()+
            "\nNúmero de linhas na cache: "+config.getnLinhas()+
            "\nTamanho do endereço: "+config.getTamEnd();
        tabConfig.setText(t);
        
        spinConjs.setValue(config.getnConj());
        spinLinhas.setValue(config.getnLinConj());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grpAcesso = new javax.swing.ButtonGroup();
        grpSubst = new javax.swing.ButtonGroup();
        diagError = new javax.swing.JDialog();
        jPanel8 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        diagRes = new javax.swing.JDialog();
        jPanel9 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        lblMap = new javax.swing.JLabel();
        lblSubst = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtResultado = new javax.swing.JTextArea();
        jPanel10 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        diagArqConf = new javax.swing.JDialog();
        chooseConf = new javax.swing.JFileChooser();
        diagArqTeste = new javax.swing.JDialog();
        chooseTeste = new javax.swing.JFileChooser();
        jPanel3 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        inpConfig = new javax.swing.JTextField();
        inpTeste = new javax.swing.JTextField();
        btnArqTeste = new javax.swing.JButton();
        btnArqConfig = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tabConfig = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        radDireto = new javax.swing.JRadioButton();
        radAssoc = new javax.swing.JRadioButton();
        radAssocConj = new javax.swing.JRadioButton();
        spinConjs = new javax.swing.JSpinner();
        spinLinhas = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        radRandom = new javax.swing.JRadioButton();
        radFIFO = new javax.swing.JRadioButton();
        radLRU = new javax.swing.JRadioButton();
        radLFU = new javax.swing.JRadioButton();
        jPanel5 = new javax.swing.JPanel();
        btnIniciar = new javax.swing.JButton();

        diagError.setTitle("Informações Inválidas");
        diagError.setAlwaysOnTop(true);
        diagError.setLocation(new java.awt.Point(250, 290));
        diagError.setSize(new java.awt.Dimension(435, 135));
        diagError.setType(java.awt.Window.Type.POPUP);

        jLabel13.setText("As informações sobre conjuntos inseridas não são compatíveis com o");

        jLabel14.setText("simulador, elas devem respeitar as regras mostradas no item Regras.");

        jButton1.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.borderColor"));
        jButton1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jButton1.setText("OK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel8Layout.createSequentialGroup()
                            .addComponent(jLabel16)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1))
                        .addComponent(jLabel14)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel14)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel16))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout diagErrorLayout = new javax.swing.GroupLayout(diagError.getContentPane());
        diagError.getContentPane().setLayout(diagErrorLayout);
        diagErrorLayout.setHorizontalGroup(
            diagErrorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(diagErrorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        diagErrorLayout.setVerticalGroup(
            diagErrorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(diagErrorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        diagRes.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        diagRes.setTitle("Realizando simulação");
        diagRes.setLocation(new java.awt.Point(700, 90));
        diagRes.setSize(new java.awt.Dimension(420, 675));
        diagRes.setType(java.awt.Window.Type.POPUP);

        jLabel15.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel15.setText("Testando para a configuração:");

        lblMap.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        lblMap.setText(" - Mapeamento ...");

        lblSubst.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        lblSubst.setText(" - Substituição ...");

        txtResultado.setEditable(false);
        txtResultado.setColumns(20);
        txtResultado.setLineWrap(true);
        txtResultado.setRows(5);
        txtResultado.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtResultadoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtResultadoFocusLost(evt);
            }
        });
        jScrollPane1.setViewportView(txtResultado);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addComponent(lblMap)
                            .addComponent(lblSubst))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblMap)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblSubst)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 515, Short.MAX_VALUE)
                .addContainerGap())
        );

        jButton2.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.borderColor"));
        jButton2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jButton2.setText("Voltar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout diagResLayout = new javax.swing.GroupLayout(diagRes.getContentPane());
        diagRes.getContentPane().setLayout(diagResLayout);
        diagResLayout.setHorizontalGroup(
            diagResLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, diagResLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(diagResLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        diagResLayout.setVerticalGroup(
            diagResLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(diagResLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        diagArqConf.setTitle("Selecione o arquivo de configuração (.txt) que irá usar");
        diagArqConf.setLocation(new java.awt.Point(700, 150));
        diagArqConf.setSize(new java.awt.Dimension(610, 347));

        chooseConf.setCurrentDirectory(new java.io.File("D:\\Programacao\\Java\\1o-Trabalho-Pratico-2\\TrabalhoPratico1\\dados\\config.txt"));
        chooseConf.setSelectedFile(new java.io.File("D:\\Programacao\\Java\\1o-Trabalho-Pratico-2\\TrabalhoPratico1\\dados\\config.txt"));
        chooseConf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseConfActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout diagArqConfLayout = new javax.swing.GroupLayout(diagArqConf.getContentPane());
        diagArqConf.getContentPane().setLayout(diagArqConfLayout);
        diagArqConfLayout.setHorizontalGroup(
            diagArqConfLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(diagArqConfLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(chooseConf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        diagArqConfLayout.setVerticalGroup(
            diagArqConfLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(diagArqConfLayout.createSequentialGroup()
                .addComponent(chooseConf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        diagArqTeste.setTitle("Selecione o arquivo de teste (.txt) que irá usar");
        diagArqTeste.setLocation(new java.awt.Point(700, 150));
        diagArqTeste.setResizable(false);
        diagArqTeste.setSize(new java.awt.Dimension(610, 347));

        chooseTeste.setCurrentDirectory(new java.io.File("D:\\Programacao\\Java\\1o-Trabalho-Pratico-2\\TrabalhoPratico1\\dados\\teste_1.txt"));
        chooseTeste.setFont(new java.awt.Font("Arial", 0, 10)); // NOI18N
        chooseTeste.setSelectedFile(new java.io.File("D:\\Programacao\\Java\\1o-Trabalho-Pratico-2\\TrabalhoPratico1\\dados\\teste_1.txt"));
        chooseTeste.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseTesteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout diagArqTesteLayout = new javax.swing.GroupLayout(diagArqTeste.getContentPane());
        diagArqTeste.getContentPane().setLayout(diagArqTesteLayout);
        diagArqTesteLayout.setHorizontalGroup(
            diagArqTesteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, diagArqTesteLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(chooseTeste, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        diagArqTesteLayout.setVerticalGroup(
            diagArqTesteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, diagArqTesteLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(chooseTeste, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Simulador de Memória Cache - Bruno Batista");
        setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        setLocation(new java.awt.Point(250, 150));
        setResizable(false);

        jLabel8.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel8.setText("Teste atual: ");
        jLabel8.setToolTipText("");

        jLabel9.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel9.setText("Config. atual:");
        jLabel9.setToolTipText("");

        inpConfig.setEditable(false);
        inpConfig.setText("*caminho da config vai aqui*");

        inpTeste.setEditable(false);
        inpTeste.setText("*caminho do teste vai aqui*");

        btnArqTeste.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.borderColor"));
        btnArqTeste.setText("Selecionar arquivo de teste");
        btnArqTeste.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnArqTesteActionPerformed(evt);
            }
        });

        btnArqConfig.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.borderColor"));
        btnArqConfig.setText("Selecionar arquivo de configurção");
        btnArqConfig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnArqConfigActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inpConfig))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(inpTeste))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btnArqTeste)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnArqConfig)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inpTeste, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inpConfig, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnArqTeste)
                    .addComponent(btnArqConfig))
                .addGap(56, 56, 56))
        );

        jLabel1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel1.setText("Informações do arquivo de configurção");

        tabConfig.setEditable(false);
        tabConfig.setColumns(20);
        tabConfig.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        tabConfig.setRows(5);
        tabConfig.setTabSize(4);
        tabConfig.setText("Memória Principal:  ??? B\nMemória Cache: ??? B\nPalavras por linha: ???\nTamanho da palavra: ???\nNúmero de blocos na MP: ???\nNúmero de linhas na cache: ???\nTamanho do endereço: ???");
        tabConfig.setWrapStyleWord(true);
        tabConfig.setRequestFocusEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(tabConfig))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tabConfig, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(9, Short.MAX_VALUE))
        );

        jLabel2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel2.setText("Tipo de acesso:");

        radDireto.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        radDireto.setText("Direto");
        radDireto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radDiretoActionPerformed(evt);
            }
        });

        radAssoc.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        radAssoc.setText("Associativo");
        radAssoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radAssocActionPerformed(evt);
            }
        });

        radAssocConj.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        radAssocConj.setText("Associativo em Conjunto");
        radAssocConj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radAssocConjActionPerformed(evt);
            }
        });

        spinConjs.setEnabled(false);
        spinConjs.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinConjsStateChanged(evt);
            }
        });

        spinLinhas.setEnabled(false);
        spinLinhas.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinLinhasStateChanged(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel3.setText("Número de Conjuntos");

        jLabel4.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel4.setText("Linhas por Conjunto");

        jLabel10.setText("Observação: o número de conjuntos deve ser uma potência de 2, e o");

        jLabel11.setText("número de linhas por conjunto deve ser um divisor do número de linhas");

        jLabel12.setText("da cache.");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(radDireto)
                                        .addGap(18, 18, 18)
                                        .addComponent(radAssoc))
                                    .addComponent(radAssocConj))
                                .addGap(26, 26, 26)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(spinConjs, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(spinLinhas))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radAssoc)
                    .addComponent(radDireto)
                    .addComponent(spinConjs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spinLinhas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(radAssocConj)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(8, Short.MAX_VALUE))
        );

        jLabel7.setText("Tipo de substituição:");
        jLabel7.setEnabled(false);

        radRandom.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        radRandom.setText("Aleatória");
        radRandom.setEnabled(false);

        radFIFO.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        radFIFO.setText("Fila (FIFO)");
        radFIFO.setEnabled(false);

        radLRU.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        radLRU.setText("LRU");
        radLRU.setEnabled(false);

        radLFU.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        radLFU.setText("LFU");
        radLFU.setEnabled(false);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(radRandom)
                        .addGap(56, 56, 56)
                        .addComponent(radFIFO)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(radLRU)
                        .addGap(46, 46, 46)
                        .addComponent(radLFU)
                        .addGap(15, 15, 15))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radRandom)
                    .addComponent(radFIFO)
                    .addComponent(radLRU)
                    .addComponent(radLFU))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnIniciar.setBackground(javax.swing.UIManager.getDefaults().getColor("Actions.Blue"));
        btnIniciar.setText("Iniciar Simulação");
        btnIniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIniciarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnIniciar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnIniciar, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(7, 7, 7))
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        diagError.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void radAssocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radAssocActionPerformed
        tipoMap = 1;
        
        spinConjs.setEnabled(false);
        spinLinhas.setEnabled(false);
        
        jLabel7.setEnabled(true);
        radFIFO.setEnabled(true);
        radRandom.setEnabled(true);
        radLRU.setEnabled(true);
        radLFU.setEnabled(true);
    }//GEN-LAST:event_radAssocActionPerformed

    private void radAssocConjActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radAssocConjActionPerformed
        tipoMap = 2;
        
        spinConjs.setEnabled(true);
        spinLinhas.setEnabled(true);
        
        jLabel7.setEnabled(true);
        radFIFO.setEnabled(true);
        radRandom.setEnabled(true);
        radLRU.setEnabled(true);
        radLFU.setEnabled(true);
    }//GEN-LAST:event_radAssocConjActionPerformed

    private void radDiretoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radDiretoActionPerformed
        tipoMap = 0;
        
        spinConjs.setEnabled(false);
        spinLinhas.setEnabled(false);
        
        jLabel7.setEnabled(false);
        radFIFO.setEnabled(false);
        radRandom.setEnabled(false);
        radLRU.setEnabled(false);
        radLFU.setEnabled(false);
    }//GEN-LAST:event_radDiretoActionPerformed

    private void spinConjsStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinConjsStateChanged
        int newLinhas, newConjs = (int)spinConjs.getValue();
        if (newConjs > 0) {
            if (newConjs > config.getnLinhas()) {
                spinConjs.setValue(config.getnLinhas());
                spinLinhas.setValue(1);
            } else {
                newLinhas = config.getnLinhas()/newConjs;
                spinLinhas.setValue(newLinhas);
                
                if (config.getnLinhas() % newLinhas == 0) {
                    jLabel4.setForeground(Color.black);
                    
                    jLabel10.setForeground(Color.black);
                    jLabel11.setForeground(Color.black);
                    jLabel12.setForeground(Color.black);
                    
                } else {
                    float[] v = Color.RGBtoHSB(230, 0, 0, null);
                    Color verm = Color.getHSBColor(v[0], v[1], v[2]);
                    jLabel4.setForeground(verm);
                    
                    jLabel10.setForeground(verm);
                    jLabel11.setForeground(verm);
                    jLabel12.setForeground(verm);
                }
                
                double aux = Math.log10(newConjs)/Math.log10(2);
                if (((aux - (int)aux) <= 0) || (aux == 0.00)) {
                    jLabel3.setForeground(Color.black);
                    
                    jLabel10.setForeground(Color.black);
                    jLabel11.setForeground(Color.black);
                    jLabel12.setForeground(Color.black);
                    
                } else {
                    float[] v = Color.RGBtoHSB(230, 0, 0, null);
                    Color verm = Color.getHSBColor(v[0], v[1], v[2]);
                    jLabel3.setForeground(verm);
                    
                    jLabel10.setForeground(verm);
                    jLabel11.setForeground(verm);
                    jLabel12.setForeground(verm);
                }
            }
        } else {
            newLinhas = config.getnLinhas();
            spinLinhas.setValue(newLinhas);
            spinConjs.setValue(1);
        }
    }//GEN-LAST:event_spinConjsStateChanged

    private void spinLinhasStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinLinhasStateChanged
        int newLinhas = (int)spinLinhas.getValue(), newConjs;
        if (newLinhas > 0) {
            if (newLinhas > config.getnLinhas()) {
                spinLinhas.setValue(config.getnLinhas());
                spinConjs.setValue(1);
            } else {
                newConjs = config.getnLinhas()/newLinhas;
                spinConjs.setValue(newConjs);
                
                if (config.getnLinhas() % newLinhas == 0) {
                    jLabel4.setForeground(Color.black);
                    
                    jLabel10.setForeground(Color.black);
                    jLabel11.setForeground(Color.black);
                    jLabel12.setForeground(Color.black);
                    
                } else {
                    float[] v = Color.RGBtoHSB(230, 0, 0, null);
                    Color verm = Color.getHSBColor(v[0], v[1], v[2]);
                    jLabel4.setForeground(verm);
                    
                    jLabel10.setForeground(verm);
                    jLabel11.setForeground(verm);
                    jLabel12.setForeground(verm);
                }
                
                double aux = Math.log10(newConjs)/Math.log10(2);
                if (((aux - (int)aux) <= 0) || (aux == 0.00)) {
                    jLabel3.setForeground(Color.black);
                    
                    jLabel10.setForeground(Color.black);
                    jLabel11.setForeground(Color.black);
                    jLabel12.setForeground(Color.black);
                    
                } else {
                    float[] v = Color.RGBtoHSB(230, 0, 0, null);
                    Color verm = Color.getHSBColor(v[0], v[1], v[2]);
                    jLabel3.setForeground(verm);
                    
                    jLabel10.setForeground(verm);
                    jLabel11.setForeground(verm);
                    jLabel12.setForeground(verm);
                }
            }
        } else {
            newConjs = config.getnLinhas();
            spinLinhas.setValue(1);
            spinConjs.setValue(newConjs);
        }
    }//GEN-LAST:event_spinLinhasStateChanged

    private void btnIniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIniciarActionPerformed
        txtResultado.setText(" - Arquivo de teste: \""+pathTeste+"\"\n\n");
        if (radDireto.isSelected()) {
            lblMap.setText(" - Mapeamento Direto");
            lblSubst.setText(" - Substituição Direta");
            tipoMap = 0;
            tipoSubst = 0;
            diagRes.setVisible(true);
            
        } else if (radAssoc.isSelected()) {
            lblMap.setText(" - Mapeamento Associativo");
            tipoMap = 1;
            if (radRandom.isSelected()) {
                lblSubst.setText(" - Substituição Aleatória");
                tipoSubst = 0;
                diagRes.setVisible(true);
                
            } else if (radFIFO.isSelected()) {
                lblSubst.setText(" - Substituição de Fila (FIFO)");
                tipoSubst = 1;
                diagRes.setVisible(true);
                
            } else if (radLRU.isSelected()) {
                lblSubst.setText(" - Substituição Aleatória");
                tipoSubst = 2;
                diagRes.setVisible(true);
                
            } else if (radLFU.isSelected()) {
                lblSubst.setText(" - Substituição Aleatória");
                tipoSubst = 3;
                diagRes.setVisible(true);
                
            } else diagError.setVisible(true);
            
        } else if (radAssocConj.isSelected()) {
            lblMap.setText(" - Mapeamento Associativo em Conjunto ("+config.getnLinConj()+"-vias)");
            tipoMap = 2;
            double aux = Math.log10((int)spinConjs.getValue())/Math.log10(2);
            boolean conds = ((config.getnLinhas() % (int)spinLinhas.getValue() == 0) && (((aux - (int)aux) <= 0) || (aux == 0.00)));
            if (conds) {
                if (radRandom.isSelected()) {
                    lblSubst.setText(" - Substituição Aleatória");
                    tipoSubst = 0;
                
                } else if (radFIFO.isSelected()) {
                    lblSubst.setText(" - Substituição de Fila (FIFO)");
                    tipoSubst = 1;
                
                } else if (radLRU.isSelected()) {
                    lblSubst.setText(" - Substituição Aleatória");
                    tipoSubst = 2;
                
                } else if (radLFU.isSelected()) {
                    lblSubst.setText(" - Substituição Aleatória");
                    tipoSubst = 3;
                }  else diagError.setVisible(true);
                diagRes.setVisible(true);
                
            } else diagError.setVisible(true);
        } else diagError.setVisible(true);
    }//GEN-LAST:event_btnIniciarActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        diagRes.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void txtResultadoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtResultadoFocusGained
        this.setEnabled(false);
        this.teste();
    }//GEN-LAST:event_txtResultadoFocusGained

    private void txtResultadoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtResultadoFocusLost
        this.setEnabled(true);
        txtResultado.setText("");
    }//GEN-LAST:event_txtResultadoFocusLost

    private void btnArqTesteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnArqTesteActionPerformed
        diagArqTeste.setVisible(true);
    }//GEN-LAST:event_btnArqTesteActionPerformed

    private void btnArqConfigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnArqConfigActionPerformed
        diagArqConf.setVisible(true);
    }//GEN-LAST:event_btnArqConfigActionPerformed

    private void chooseTesteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseTesteActionPerformed
        pathTeste = chooseTeste.getSelectedFile().getPath();
        inpTeste.setText(pathTeste);
        diagArqTeste.dispose();
    }//GEN-LAST:event_chooseTesteActionPerformed

    private void chooseConfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseConfActionPerformed
        pathConfig = chooseConf.getSelectedFile().getPath();
        inpConfig.setText(pathConfig);
        config = new Conf(pathConfig);
        String t = 
            "Memória Principal:  "+config.getMem()+" B\n"+
            "Memória Cache: "+config.getCache()+" B\n"+
            "Palavras por linha: "+config.getLinha()+
            "\nTamanho da palavra: "+config.getPalavra()+" B\n"+
            "Número de blocos na MP: "+config.getnBlocos()+
            "\nNúmero de linhas na cache: "+config.getnLinhas()+
            "\nTamanho do endereço: "+config.getTamEnd();
        tabConfig.setText(t);
        diagArqConf.dispose();
    }//GEN-LAST:event_chooseConfActionPerformed
    
    private void teste() {
        int n = (int)spinConjs.getValue();
        config = new Conf(pathConfig, n);
        Cache cache = new Cache(tipoMap, config);
        
        // Teste para todos os acesso do arquivo
        int hits = 0, misses = 0;

        ArrayList<String> teste = FileManager.stringReader(pathTeste);
        for (String linha : teste) {
            int acesso = Integer.parseInt(linha);

            // Acessos: 0=Direto, 1=Associativo, 2=Associativo em Conjunto
            // Substit: 0=Aleatória, 1=Fila, 2=LRU, 3=LFU
            if (cache.acessar(acesso, tipoMap, tipoSubst)) {
                hits++;
                txtResultado.append("Acesso em: "+linha+" - hit\n");
                System.out.println("Acesso em: "+linha+" - hit");

            } else {                
                misses++;
                txtResultado.append("Acesso em: "+linha+" - miss\n");
                System.out.println("Acesso em: "+linha+" - hit");
            }
        }
        int total = hits+misses;
        txtResultado.append("\nTotal = "+total+" acessos");
        txtResultado.append("\nHits = "+hits+" - Misses = "+misses);
        float taxa = 100f*hits/(hits+misses);
        txtResultado.append("\nTaxa de acerto = "+taxa+"%");
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaPrincipal().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnArqConfig;
    private javax.swing.JButton btnArqTeste;
    private javax.swing.JButton btnIniciar;
    private javax.swing.JFileChooser chooseConf;
    private javax.swing.JFileChooser chooseTeste;
    private javax.swing.JDialog diagArqConf;
    private javax.swing.JDialog diagArqTeste;
    private javax.swing.JDialog diagError;
    private javax.swing.JDialog diagRes;
    private javax.swing.ButtonGroup grpAcesso;
    private javax.swing.ButtonGroup grpSubst;
    private javax.swing.JTextField inpConfig;
    private javax.swing.JTextField inpTeste;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblMap;
    private javax.swing.JLabel lblSubst;
    private javax.swing.JRadioButton radAssoc;
    private javax.swing.JRadioButton radAssocConj;
    private javax.swing.JRadioButton radDireto;
    private javax.swing.JRadioButton radFIFO;
    private javax.swing.JRadioButton radLFU;
    private javax.swing.JRadioButton radLRU;
    private javax.swing.JRadioButton radRandom;
    private javax.swing.JSpinner spinConjs;
    private javax.swing.JSpinner spinLinhas;
    private javax.swing.JTextArea tabConfig;
    private javax.swing.JTextArea txtResultado;
    // End of variables declaration//GEN-END:variables
}
